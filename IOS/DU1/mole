#!/bin/bash



# cast -h
print_help(){
    echo "Napoveda:"
    echo "      -h \ --help:"
    echo "                  zobrazi napovedu"
    echo "      [-g Group] FILE"
    echo "      [-m] [FILTERS] [DIRECTORY]"
    echo "      list [FILTERS] [DIRECTORY]"
    exit 0
}

error_func(){
    echo "Chybne zadane argumenty"
    exit 1
}
# list
list_function(){
    #uprava group
    if [ "$GROUP" != "-" ]
    then
        GROUP="$GROUP$"
        GROUP="${GROUP//,/$|}"
    else
        GROUP="*"
    fi
    #priprava directory
    FILE_DIR="$(readlink -f $FILE_DIR)"
    #samotny filtr
    LIST="$( awk -v AFTER="$TIME_AFTER" -v BEFORE="$TIME_BEFORE" -v testHome="^$FILE_DIR/[^/]*$" '$2 > AFTER && $2 <= BEFORE { if ($1 ~ testHome) {print $1 " " $4}}' "$MOLE_RC" \
        | uniq -c \
        | awk '{print $2 " " $3}'  \
        | grep -E "$GROUP"  \
        | awk -v OFS=',' '{x=$1;$1="";a[x]=a[x]$0}END{for(x in a)print x,a[x]}' \
        | awk -F',,' '{print $1 " " $2}' \
        | sed 's/-,//g' \
        | awk '{split($1, a, "/"); print a[length(a)], $2}' \
        | awk '{print $1 ": " $2}' \
        | column -t | sort \
        | awk '{print $0}'
        ) "
    #tisk vysledku, pokud tam neco je
    if [ "$LIST" != " " ]
    then
        echo "$LIST"      
    fi
}
# secret-log
secret_log_function(){
    slozka="/home/$USER/.mole"
    datum="_$(date +'%Y-%m-%d_%H-%M-%S')"
    jmeno="log_$USER$datum.bz2"
    # FILE_DIR prijde ve formatu dir1,dir2,dir3,... pote bude upravena
    DIRECTIONS="$FILE_DIR"

    DIRECTIONS="^$DIRECTIONS/[^/]*$"
    DIRECTIONS="${DIRECTIONS//,/\/[^/]*$|^}"

    SECRET="$( awk  -v AFTER="$TIME_AFTER" -v BEFORE="$TIME_BEFORE" -v directories="$DIRECTIONS" ' $2 > AFTER && $2 < BEFORE { if($1 ~ directories) {print $1 " " $2 "_" $3} } ' "$MOLE_RC" \
            | awk -v OFS=',' '{x=$1;$1="";a[x]=a[x]$0}END{for(x in a)print x,a[x]}' \
            | awk -F',,' '{print $1 ";" $2}' \
            | sed 's/,/;/g' \
            )"

    #test jestli slozka existuje, pokud ne tak vytvorit

    echo "$SECRET" | bzip2 > $slozka/$jmeno
}



# re-open file
re_open_file_function(){
    #uprava group
    tmpGROUP="$GROUP"
    GROUP="$GROUP$"
    GROUP="${GROUP//,/$|}"
    # nejprve zpracovat mozne kandidaty, casove + jestli vubec existuji
    FILE_DIR="$(readlink -f $FILE_DIR)"
    SOUBORY="$( awk  -v DATE_AFTER="$TIME_AFTER" -v DATE_BEFORE="$TIME_BEFORE" \
                        '$2 > DATE_AFTER && $2 < DATE_BEFORE && system("[ ! -f " $1 " ]") \
                        {print  $1 " " $4}' "$MOLE_RC")"
    # filtrace GROUP
    if [ "$GROUP" != "-$" ]
    then
        SOUBORY="$(echo "$SOUBORY" | grep -E "$GROUP" | awk '{print $1}')"
    else
        SOUBORY="$(echo "$SOUBORY" | awk '{print $1}')"
    fi
    SOUBORY="$(echo "$SOUBORY" | grep "^$FILE_DIR/[^/]*$" )"
    #zkontrolovat jestli mam neco po filtraci
    #pokud ne, nahlasit chybu a ukoncit skript
    if [ "$SOUBORY" == "" ]
    then
        echo "! chyba, nebyl nalezen žádný soubor k otevření"
        exit 1
    fi
    # kontrola jestli otevrit posledni nebo nejvice otevirany
    if [ "$bool_MOST_EDITED" = true ]
    then
        REAL_PATH="$(echo "$SOUBORY" | sort | uniq -c | sort -nr | awk '{print $2}' | head -1)"
    else
        REAL_PATH="$(echo "$SOUBORY" | tail -1)"
    fi
    #nastavit zpet grupu
    GROUP="$tmpGROUP"
    open_in_editor_function
}

# open file
open_file_function(){
    # kontrola, jestli ma spravny format
    if [[ $FILE_DIR == */ ]]
    then
        echo "Neplatny format jmena souboru (lomitko na konci)"
        exit 1
    fi
    # pokud soubor neexistuje
    if [ ! -e "$FILE_DIR" ]
    then
        mkdir -p "$(dirname "$FILE_DIR")" && touch "$FILE_DIR"
    fi
    
    # otevrit soubor
    REAL_PATH="$(realpath $FILE_DIR)"
    open_in_editor_function
    
}

# otevre soubor v zadanem editoru
open_in_editor_function(){
    #zprava pro log
    REAL_DATE="$(date '+%Y-%m-%d %H-%M-%S')"
    echo "$REAL_PATH $REAL_DATE $GROUP" >> $MOLE_RC
    #samotne otevreni
    if [[ -v EDITOR ]]
    then
        $EDITOR $REAL_PATH
    elif [[ -v VISUAL ]]
    then
        $VISUAL $REAL_PATH
    else
        vi $REAL_PATH
    fi
}

POSIXLY_CORRECT=yes

GROUP="-"
FILE_DIR=$PWD

TIME_AFTER="1970-01-01"
TIME_BEFORE="9999-12-31"
bool_MOST_EDITED=false
bool_LIST=false
bool_SECRED_LOG=false

while [ "$#" -gt 0 ]; do
    case $1 in
        -h | --help)
            print_help
            ;;
        -g)
            GROUP=$2
            shift
            shift
            ;;
        -m)
            bool_MOST_EDITED=true
            shift
            ;;
        -a)
            TIME_AFTER=$2
            shift
            shift
            ;;
        -b)
            TIME_BEFORE=$2
            shift
            shift
            ;;
        list)
            bool_LIST=true
            shift
            ;;
        secret-log)
            bool_SECRED_LOG=true
            shift
            ;;
        *)
            if [ $# -gt 1 ]
            then
                error_func
            fi
            FILE_DIR=$1
            shift       
            ;;
    esac
done


#kontrola jestli je mole_rc definovano
if [[ ! -v MOLE_RC ]]
then
    echo "promena MOLE_RC neni nastavena"
    exit 1
else
    #vytvoreni $MOLE_RC pokud jeste neni
    if [ ! -e "$MOLE_RC" ]
    then
        echo "tvorim mole_rc"
        mkdir -p "$(dirname "$MOLE_RC")" && touch $MOLE_RC
    fi
fi

#kontrola kdyz jsou zadane oba
if [[ ("$bool_LIST" = true  &&  "$bool_SECRED_LOG" = true ) ]]
then
    echo "Neplatne parametry. (list a secret-log zaroven)"
    exit 1
fi 


# cast list
if [  "$bool_LIST" = true  ]
then
    list_function
    exit 0
fi

# cast secret-log
if [  "$bool_SECRED_LOG" = true ]
then
    echo "Secret log"
    secret_log_function
    exit 0
fi

# zkontrolovat existenci [directory]
if [[ -d $FILE_DIR ]]
then
    re_open_file_function
    exit 0
else
    open_file_function
    exit 0
fi